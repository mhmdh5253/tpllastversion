@using BLL.LetterAutomation
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.IdentityModel.Tokens
@model IEnumerable<BE.LetterAutomation.Letter>
@inject BlRecivers BlRecivers
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var recivers = await BlRecivers.GetAllOrganizationsChainingAsync();

}

@section vendorcss {
    <link rel="stylesheet" href="~/assets/vendor/libs/datatables-bs5/datatables.bootstrap5.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/flatpickr/flatpickr.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <style>
        .status-badge {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            display: inline-block;
            min-width: 100px;
            text-align: center;
            transition: all 0.3s ease;
        }

        .status-pending {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-referred {
            background-color: #cce5ff;
            color: #004085;
        }

        .status-archived {
            background-color: #e2e3e5;
            color: #383d41;
        }

        .status-completed {
            background-color: #d4edda;
            color: #155724;
        }

        .status-rejected {
            background-color: #f8d7da;
            color: #721c24;
        }

        .letter-row:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }

        .letter-row {
            transition: all 0.3s ease;
        }

        .action-buttons .btn {
            opacity: 0.8;
            transition: all 0.3s ease;
        }

            .action-buttons .btn:hover {
                opacity: 1;
                transform: scale(1.1);
            }

        .table-responsive {
            border-radius: 10px;
            overflow: hidden;
        }

        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 6px 15px rgba(0,0,0,0.1);
        }

        .card-header {
            border-radius: 15px 15px 0 0 !important;
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: white;
        }

        .btn-success {
            background: linear-gradient(135deg, #00b09b 0%, #96c93d 100%);
            border: none;
        }

        .dataTables_wrapper .dataTables_filter input {
            border-radius: 20px;
            padding: 5px 15px;
            border: 1px solid #ddd;
        }
    </style>
}

<div class="card shadow-lg">
    <div class="card-header py-3 d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-white">@ViewData["Title"]</h6>
        <a asp-action="Create" class="btn btn-success btn-lg animate__animated animate__pulse">
            <i class="fas fa-plus"></i> ایجاد نامه جدید
        </a>
    </div>
    <div class="card-body">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show animate__animated animate__fadeIn" role="alert">
                <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["LetterDownloadLink"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show animate__animated animate__fadeIn" role="alert">
                <i class="fas fa-file-word me-2"></i>
                <a download href="~/wordfiles/@TempData["LetterDownloadLink"]" class="text-decoration-none">دانلود فایل ورد نامه</a>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show animate__animated animate__shakeX" role="alert">
                <i class="fas fa-exclamation-circle me-2"></i> @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="table-responsive">
            <table class="table table-hover align-middle" id="dataTable" width="100%" cellspacing="0">
                <thead class="table-light">
                    <tr>
                        @if (TempData["vaziat"] != null)
                        {
                            <th class="text-center">وضعیت</th>
                        }
                        <th>شماره نامه</th>
                        <th>مشاهده</th>
                        <th>موضوع</th>
                        <th>فرستنده</th>
                        <th>گیرنده</th>
                        <th>تاریخ ثبت</th>
                        <th class="text-center">عملیات</th>
                    </tr>
                </thead>
                <tbody>
                  @if (!Model.IsNullOrEmpty())
                  {
                        @foreach (var item in Model)
                        {
                            var girandeh = await BlRecivers.GetReceiverFullPath(item?.Receiver);
                            <tr class="letter-row animate__animated animate__fadeIn">
                                @if (TempData["vaziat"] != null)
                                {
                                    <td class="text-center">
                                        <span class="status-badge status-@item.Status.ToString().ToLower() animate__animated animate__pulse animate__infinite">
                                            @Status(item.Status.ToString())
                                        </span>
                                    </td>
                                }
                                <td class="fw-bold">@item.LetterNumber</td>
                                <td>
                                    <a asp-action="LetterView" asp-route-id="@item.Id"
                                       class="btn btn-sm btn-outline-primary waves-effect"
                                       data-bs-toggle="tooltip"
                                       title="مشاهده جزئیات">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </td>
                                <td>@item.Subject</td>
                                <td>@await BlRecivers.GetReceiverFullPath(item.Sender)</td>
                                <td>@girandeh</td>
                                <td dir="ltr" class="text-nowrap">@item.RegistrationDate.ToString("yyyy/MM/dd - HH:mm")</td>
                                <td class="action-buttons">
                                    <div class="d-flex justify-content-center gap-2">

                                        @if (ReferenceEquals(ViewData["Title"], "کارتابل نامه های صادره"))
                                        {
                                            <a asp-action="Edit" asp-route-id="@item.Id"
                                               class="btn btn-sm btn-outline-info waves-effect"
                                               data-bs-toggle="tooltip"
                                               title="ویرایش">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a href="#" onclick="generateWordFile(@item.Id, event)"
                                               class="btn btn-sm btn-outline-primary waves-effect"
                                               data-bs-toggle="tooltip"
                                               title="تولید و دانلود فایل ورد">
                                                <i class="fas fa-file-word"></i>
                                            </a>
                                            <a href="#" onclick="generatePdfFile(@item.Id, event)"
                                               class="btn btn-sm btn-outline-danger waves-effect"
                                               data-bs-toggle="tooltip"
                                               title="دانلود PDF">
                                                <i class="fas fa-file-pdf"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@item.Id"
                                               class="btn btn-sm btn-outline-dark waves-effect"
                                               data-bs-toggle="tooltip"
                                               title="حذف">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        }
                                        else
                                        {
                                            <!-- ابزارهای عمومی -->
                                            <a href="#" onclick="generateWordFile(@item.Id, event)"
                                               class="btn btn-sm btn-outline-primary waves-effect"
                                               data-bs-toggle="tooltip"
                                               title="تولید و دانلود فایل ورد">
                                                <i class="fas fa-file-word"></i>
                                            </a>
                                            <a href="#" onclick="generatePdfFile(@item.Id, event)"
                                               class="btn btn-sm btn-outline-danger waves-effect"
                                               data-bs-toggle="tooltip"
                                               title="دانلود PDF">
                                                <i class="fas fa-file-pdf"></i>
                                            </a>


                                        }
                                    </div>
                                </td>
                            </tr>
                        }


                    }
                    
                    </tbody>
            </table>
        </div>
    </div>
</div>

@{
    string Status(string state)
    {
        switch (state)
        {
            case "Pending":
                return "در انتظار";
            case "Referred":
                return "ارجاع شده";
            case "OrganizationArchived":
                return "بایگانی شده";
            case "Completed":
                return "تکمیل شده";
            case "Rejected":
                return "رد شده";
        }
        return "";
    }
}

@section vendorjs {
    <script src="~/assets/vendor/libs/datatables-bs5/datatables-bootstrap5.js"></script>
}

@section PageJs {
    <script src="~/assets/js/tables-datatables-advanced.js"></script>
    <script>
        async function generatePdfFile(id, event) {
                event.preventDefault();

                const btn = event.target.closest('a');
                const originalHtml = btn.innerHTML;
                btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> در حال تولید...';
                btn.classList.add('disabled');

                try {
                        const response = await fetch(`@Url.Action("LetterGenerate", "Letter")?id=${id}`);

                        if (!response.ok) {
                                throw new Error(await response.text());
                            }

                        const data = await response.json();
                        const fileId = data.fileId;

                        // بررسی وجود فایل قبل از دانلود
                        const fileCheck = await fetch(`/wordfiles/${fileId}.pdf`, { method: 'HEAD' });
                        if (!fileCheck.ok) {
                                throw new Error('فایل تولید شده یافت نشد');
                            }

                        // دانلود خودکار
                        const a = document.createElement('a');
                        a.href = `/wordfiles/${fileId}.pdf`;
                        a.download = `نامه_${fileId}_${new Date().toLocaleDateString('fa-IR')}.pdf`;
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a);

                    } catch (error) {
                        console.error('Error:', error);
                        alert('خطا در تولید فایل: ' + error.message);
                    } finally {
                        btn.innerHTML = originalHtml;
                        btn.classList.remove('disabled');
                    }
            }    </script>
    <script>
        async function generateWordFile(id, event) {
                event.preventDefault();

                const btn = event.target.closest('a');
                const originalHtml = btn.innerHTML;
                btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> در حال تولید...';
                btn.classList.add('disabled');

                try {
                        const response = await fetch(`@Url.Action("LetterGenerate", "Letter")?id=${id}`);

                        if (!response.ok) {
                                throw new Error(await response.text());
                            }

                        const data = await response.json();
                        const fileId = data.fileId;

                        // بررسی وجود فایل قبل از دانلود
                        const fileCheck = await fetch(`/wordfiles/${fileId}.docx`, { method: 'HEAD' });
                        if (!fileCheck.ok) {
                                throw new Error('فایل تولید شده یافت نشد');
                            }

                        // دانلود خودکار
                        const a = document.createElement('a');
                        a.href = `/wordfiles/${fileId}.docx`;
                        a.download = `نامه_${fileId}_${new Date().toLocaleDateString('fa-IR')}.docx`;
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a);

                    } catch (error) {
                        console.error('Error:', error);
                        alert('خطا در تولید فایل: ' + error.message);
                    } finally {
                        btn.innerHTML = originalHtml;
                        btn.classList.remove('disabled');
                    }
            }    </script>
    <script>
        $(document).ready(function(){
            $('#dataTable').DataTable();

            // Initialize tooltips
            $('[data-bs-toggle="tooltip"]').tooltip();

            // Add animation to status badges
            setInterval(function() {
                $('.status-badge').addClass('animate__pulse');
                setTimeout(function() {
                    $('.status-badge').removeClass('animate__pulse');
                }, 1000);
            }, 3000);
        });
    </script>
}